package week10;

/*N명의 사람이 1리터의 쥬스를 나누어 각자 잔에 따라서 마시고자 한다.

        그런데 한사람이 따르고 분배하는 것은 공평하지 않기 때문에 다음 방법을 통해 쥬스를 나눠 마시기로 하였다.



        첫번째 사람이 원하는 만큼 한잔 따르고, 두번째 사람이 원하는 만큼  한잔 따르고, ..., N번째 사람이 남은만큼 한잔 따른다.

        그 후 N번째 사람이 N개의 잔 중에 하나를 가져가고, N-1번째 사람이 남은 잔 중에 하나를 가져가고, 최종적으로 첫번째 사람이 마지막으로 남은 잔을 가져간다.



        모든 사람은 목이 마른 상태이기 때문에, 최대한의 쥬스를 마시고자 최선의 전략을 쓴다고 가정하자.

        또한 이들은 서로 모르기 때문에, 담합 혹은 협력 등은 없다고 가정하자.

        이때 첫번째 사람부터 N번째 사람까지 각각 쥬스를 얼마씩 마시게 되는지 구하도록 하자.



        [입력]

        첫 줄에 테스트케이스의 개수 T가 주어진다. (1 ≤ T ≤ 20)

        각 줄에 테스트케이스가 주어지는데, N이 입력으로 들어온다. ( 1 ≤ N ≤ 1000 )



        [출력]

        각 테스트케이스마다 한 줄에 걸쳐, 테스트케이스 수 “#(TC) “를 출력하고, 각 사람이 마시게 될 쥬스의 양을 공백을 두고 출력한다.

        쥬스의 양은 정수가 아니기 때문에, 기약분수로 만들어 "p/q" 꼴로 출력하도록 한다.*/


import java.util.Scanner;

public class Solution_5601_Professional_쥬스_나누기 {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);

        int t = sc.nextInt();

        for(int tc=1; tc<=t; tc++){
            int n = sc.nextInt();

            System.out.print("#" + tc + " ");

            for(int i=0; i<n; i++){
                System.out.print("1/"+n + " ");
            }

            System.out.println();
        }
    }
}
